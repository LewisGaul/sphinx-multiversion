os: linux
dist: xenial
language: python

jobs:
  include:
    - name: "Ubuntu / Python 3.6"
      stage: Testing
      python: 3.6
    - name: "Ubuntu / Python 3.7"
      stage: Testing
      python: 3.7
    - name: "Windows / Python 3.6"
      stage: Testing
      os: windows
      language: shell
      before_install:
      - choco install python --version 3.6.8
      env:
      - PATH=/c/Python36:/c/Python36/Scripts:$PATH
      - SKIP=check-executables-have-shebangs
    - name: "Windows / Python 3.7"
      stage: Testing
      os: windows
      language: shell
      before_install:
      - choco install python --version 3.7.8
      env:
      - PATH=/c/Python37:/c/Python37/Scripts:$PATH
      - SKIP=check-executables-have-shebangs
    - name: "Ubuntu / Python 3.7"
      stage: Deployment
      if: type != pull_request AND (branch = master OR tag IS present)
      python: 3.7
      before_deploy:
      - touch html/.nojekyll
      - cp assets/gh-pages-redirect.html html/index.html
      deploy:
        # Deploy to PyPI
      - provider: pypi
        username: "__token__"
        password:
          secure: "REMOVED"
        distributions: "sdist bdist_wheel"
        skip_existing: true
        on:
          branch: master
          repo: Holzhaus/sphinx-multiversion
          tags: true
        # Deploy to Github Releases
      - provider: releases
        token:
          secure: "REMOVED"
        name: "$TRAVIS_TAG"
        release_notes: "Release $TRAVIS_TAG"
        draft: false
        skip_cleanup: true
        file_glob: true
        file: dist/*
        overwrite: true
        on:
          branch: master
          repo: LewisGaul/sphinx-multiversion
          tags: true
        # Deploy documentation
      - provider: pages
        skip_cleanup: true
        keep_history: false
        token: $GITHUB_TOKEN
        local_dir: html
        on:
          branch: master
          repo: LewisGaul/sphinx-multiversion

stages:
  - Testing
  - Deployment

cache:
  pip: true

install:
- python -m pip install pre-commit setuptools wheel
- python -m pip install -r requirements.txt
- python setup.py install

before_script:
- pre-commit run --all-files --show-diff-on-failure
- python -m unittest --verbose

script:
- mkdir html
- git fetch --all
- python -I -m sphinx_multiversion -W docs html
- python setup.py build sdist bdist_wheel

